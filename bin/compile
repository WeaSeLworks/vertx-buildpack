#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

BIN_DIR=$(cd $(dirname $0); pwd) # absolute path
# parse args
BUILD_DIR=$1
CACHE_DIR=$2
VERTX_DIR=.vertxdir

#create the cache dir if it doesn't exist
mkdir -p $CACHE_DIR

cd $BUILD_DIR
if [ -d "$CACHE_DIR/.jdk7" ]; then
  echo -n "copying jdk to app"
  cp -r "$CACHE_DIR/.jdk7" $BUILD_DIR
  echo "done"
fi

OPENJDK7_URL="https://s3.amazonaws.com/heroku-jvm-langpack-java/openjdk7-u2-heroku-temaki.tar.gz"

if [ ! -d "$BUILD_DIR/.jdk7" ]; then
  echo -n "-----> Installing OpenJDK7u2 build (to .jdk7)....."
  mkdir "$BUILD_DIR/.jdk7"
  cd "$BUILD_DIR/.jdk7"
  curl --max-time 180 --location $OPENJDK7_URL | tar xz
  cd $BUILD_DIR
  cp -r .jdk7 $CACHE_DIR/.jdk7
  echo " done"
fi

if [ -d "$CACHE_DIR/$VERTX_DIR" ]; then
  echo -n "copying vertx to app"
  cp -r "$CACHE_DIR/$VERTX_DIR" $BUILD_DIR
  echo "done"
fi

VERTX_URL="http://dl.bintray.com/vertx/downloads/vert.x-2.0.1-final.tar.gz"

if [ ! -d "$BUILD_DIR/$VERTX_DIR" ]; then
  echo -n "-----> Installing Vert.x build (to $VERTX_DIR)....."
  curl --max-time 320 --location $VERTX_URL | tar xz
  mv vert* $VERTX_DIR
  rm "$VERTX_DIR/bin/vertx.bat"
  cd $BUILD_DIR
  cp -r $VERTX_DIR $CACHE_DIR/$VERTX_DIR
  echo " done"
fi

cd $BUILD_DIR

mkdir -p mods/foo~bar~1
man find > q && echo `cat q`
find . -maxdepth 1 ! -name "\.jdk7" ! -name "Procfile" ! -name "\$VERTX_DIR" ! -name "\." ! -name "mods" -exec mv {} mods/foo~bar~1/ \;

echo "PORT = $PORT"
echo "HOST = $VCAP_APP_HOST"

export JAVA_HOME="$BUILD_DIR/.jdk7"
export VERTX_HOME="$BUILD_DIR/$VERTX_DIR"
export PATH=$PATH:$JAVA_HOME/bin:$VERTX_HOME/bin

echo "Path is set to"
echo $PATH
echo "DEBUG : "
find . > q && echo `cat q`

if [ -f compile.sh ]; then
    echo 'compile.sh file found, executing...'
    chmod 700 compile.sh
    ./compile.sh
fi

# Warn if no Procfile is present
if [ ! -f Procfile ]; then
  echo "-----> No Procfile found. Will use the following default process: "
  echo "       HOST=$VCAP_APP_HOST PORT=$PORT vertx runmod foo~bar~1"
fi
