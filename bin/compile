#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

BIN_DIR=$(cd $(dirname $0); pwd) # absolute path
# parse args
BUILD_DIR=$1
CACHE_DIR=$2
VERTX_DIR=.vertxdir

#create the cache dir if it doesn't exist
mkdir -p $CACHE_DIR

cd $BUILD_DIR
if [ -d "$CACHE_DIR/.jdk7" ]; then
  echo -n "copying jdk to app"
  cp -r "$CACHE_DIR/.jdk7" $BUILD_DIR
  echo "done"
fi

GROOVY_URL="http://dl.bintray.com/groovy/maven/groovy-binary-2.3.7.zip"

if [ ! -d "$CACHE_DIR/.groovy" ]; then
  echo -n "-----> Installing Groovy shell (to .groovy)....."
  mkdir "$BUILD_DIR/.groovy"
  cd "$BUILD_DIR/.groovy"
  curl --max-time 180 --location $GROOVY_URL > groovybin.zip
  unzip groovybin.zip
  export GROOVY_HOME=$BUILD_DIR/.groovy/groovy-2.3.7
  echo " done"
fi


OPENJDK7_URL="https://s3.amazonaws.com/heroku-jvm-langpack-java/openjdk7-u2-heroku-temaki.tar.gz"

if [ ! -d "$BUILD_DIR/.jdk7" ]; then
  echo -n "-----> Installing OpenJDK7u2 build (to .jdk7)....."
  mkdir "$BUILD_DIR/.jdk7"
  cd "$BUILD_DIR/.jdk7"
  curl --max-time 180 --location $OPENJDK7_URL | tar xz
  cd $BUILD_DIR
  cp -r .jdk7 $CACHE_DIR/.jdk7
  echo " done"
fi

if [ -d "$CACHE_DIR/$VERTX_DIR" ]; then
  echo -n "copying vertx to app"
  cp -r "$CACHE_DIR/$VERTX_DIR" $BUILD_DIR
  echo "done"
fi

VERTX_URL="http://dl.bintray.com/vertx/downloads/vert.x-2.1.2.tar.gz"


if [ ! -d "$BUILD_DIR/$VERTX_DIR" ]; then
  echo -n "-----> Installing Vert.x build (to $VERTX_DIR)....."
  curl --max-time 320 --location $VERTX_URL | tar xz
  mv vert* $VERTX_DIR
  rm "$VERTX_DIR/bin/vertx.bat"
  cd $BUILD_DIR
  cp -r $VERTX_DIR $CACHE_DIR/$VERTX_DIR
  echo " done"
fi

export PATH=$GROOVY_HOME/bin:$PATH:$JAVA_HOME/bin:$VERTX_HOME/bin



cd $BUILD_DIR

mkdir -p mods/foo~bar~1

#mv app files into a mods/<package>~<appname>~1 dir. 
#This is the trick that makes the vertx runmod cmd work.
find . -maxdepth 1 ! -name "\.jdk7" ! -name "Procfile" ! -name "\.vertxdir" ! -name "\." ! -name "mods" -exec mv {} mods/foo~bar~1/ \;



mkdir -p ${BUILD_DIR}/.profile.d
echo "export JAVA_HOME=\"\$HOME/.jdk7\"" > ${BUILD_DIR}/.profile.d/javahome.sh
echo "export VERTX_HOME=\"\$HOME/$VERTX_DIR\"" > ${BUILD_DIR}/.profile.d/vertxhome.sh
echo "export PATH=\"\$HOME/.jdk7/bin:\$HOME/$VERTX_DIR/bin:\$PATH\"" > ${BUILD_DIR}/.profile.d/path.sh

echo "debug javahome"
echo `cat ${BUILD_DIR}/.profile.d/javahome.sh`
echo "debug vertxhome"
echo `cat ${BUILD_DIR}/.profile.d/vertxhome.sh`
echo "debug path.sh"
echo `cat ${BUILD_DIR}/.profile.d/path.sh`


echo "Path is set to"
echo $PATH
echo "DEBUG : "
find . -maxdepth 4 > q && echo `cat q`
echo "VCAP = $VCAP_APPLICATION"
echo `groovy $BIN_DIR/vcap.groovy application_name`


# Warn if no Procfile is present
if [ ! -f Procfile ]; then
  echo "-----> No Procfile found. Will use the following default process: "
  echo "       vertx runmod foo~bar~1"
fi
